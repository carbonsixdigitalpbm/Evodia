@using Umbraco.Web
@using Evodia.Core.Utility
@inherits UmbracoViewPage<IPublishedContent>
@{
    Layout = "MasterNews.cshtml";

    var homePage = Model.AncestorOrSelf(1);
    var news = homePage.Descendants("news").First();
    var allPosts = news.Descendants().Where( x => x.IsVisible() ).OrderBy("releaseDate desc").ToList();

    string headline = Model.HasValue("headline") ? Model.GetPropertyValue<string>("headline") : Model.Name;
    DateTime releaseDate = Model.GetPropertyValue<DateTime>("releaseDate");
    string excerpt = Model.GetPropertyValue<string>("excerpt");
@*
    string docType = Model.DocumentTypeAlias;
    string category = "";

    switch(docType)
    {
        case "generalNews":
            category = "General news";
            break;
        case "pressRelease":
            category = "Press release";
            break;
        case "inTheMedia":
            category = "In the media";
            break;
    }

    string categoryUrl = Model.Ancestor().Url + "?category=" + category.ToLower().Replace(" ", "-");
*@
}

<article class="c-article" itemscope itemtype="http://schema.org/Article">
    <header class="c-article__header">
        <h1 class="c-article__heading" itemprop="headline">@headline</h1>
        <ul class="c-meta-data">
            <li class="c-meta-data__item">
                <time datetime="@releaseDate" pubdate="pubdate">
                    @releaseDate.ToString("%d")<sup>@Helpers.GetDaySuffix(releaseDate.ToString("%d"))</sup> @releaseDate.ToString("MMMM yyyy")
                </time>
                <meta itemprop="datePublished" content="@releaseDate.ToString("yyyy-MM-dd")">
            </li>
			@*
            <li class="c-meta-data__item" itemprop="keywords">
                <a href="@categoryUrl" rel="category">@category</a>
            </li>
			*@
        </ul>
    </header>
    <div class="s-free-content u-clearfix" itemprop="articleBody">
        <div class="c-article__description u-strong u-space-bottom" itemprop="description">
            <p>@excerpt</p>
        </div>

        @Html.Partial("~/Views/Partials/PageComponents/PageComponents.cshtml", Model, new ViewDataDictionary {{"wrapSize", "large"}})
    </div>
</article>

@section Sidebar {
	<div class="c-pod c-pod--light">
		@Html.Partial("~/Views/Partials/Components/BlogNewsArchive.cshtml", allPosts.ToList())
		@*
		@Html.Partial("~/Views/Partials/News/NewsFilter.cshtml")
		*@
   </div>
}
