@using Umbraco.Web
@inherits UmbracoViewPage<IPublishedContent>
@{
    Layout = "Master.cshtml";
    string headline = Model.HasValue("headline") ? Model.GetPropertyValue<string>("headline") : Model.Name;
}

<main class="o-page__inner" role="main">
	@RenderCover()
	@RenderSpecials()

	<section class="o-section u-background--dark">
		<div class="o-section__inner o-wrap o-wrap--small u-center-content">
			<h2 class="u-alpha">Need to submit a vacancy?</h2>
			<a href="" class="c-button c-button--secondary-invert u-space-top">Get in touch ></a>
		</div>
	</section>

	@Html.Partial("~/Views/Partials/Home/FeaturedContent.cshtml")

	@RenderQuotes()

</main>


@helper RenderSpecials() {
	string links = "Support engineering,Investment appraisal,Information assurance,Consulting and support,Systems engineering & software,Defence and space,Operational research & modelling, Autonomous systems,Public sector";

	<section class="o-section o-wrap o-wrap--x-large">
		<h2 class="u-text--dark u-alpha u-center-content">Our specialisms</h2>
		<div class="o-section__inner u-clearfix u-space-top">
			<ul class="c-link-list--grid">
				@foreach( var item in links.Split(',') ) {
					<li class="c-link-list__item">
						<a href="" class="c-link-list__link">@item</a>
					</li>
				}
			</ul>
		</div>
	</section>

}

@helper RenderQuotes() {
	var quote = "Can't believe I've landed something so quickly! Thank you again for all your assistance and getting me the interview in the first place. Thanks again, you have been great!";

	var isCarousel = true;
	var carouselClass = isCarousel ? "js-carousel" : "";


	<section class="c-carousel o-section o-wrap o-wrap--medium">
		<div class="o-section__inner u-center-content @carouselClass" data-nav="true" data-loop="true" data-fade="true">
			@RenderQuote( quote, "Carl Jameson", "CEO" )
			@RenderQuote( quote, "Another person", "Random" )
			@RenderQuote( quote, "Just someone", "" )

		</div>
		<span class="t-line-vertical" aria-role="presentation"></span>
	</section>

}

@helper RenderQuote(string quote = "", string source = "", string role = "") {

    <blockquote class="c-quote">
		<div class="c-quote__inner">
	        <div class="c-quote__copy">
	            "@quote"
	        </div>

	        <footer class="c-quote__src">@source - <span class="u-light">@role</span></footer>
		</div>
    </blockquote>
}


@helper RenderCover() {
	var headline = Model.GetPropertyValue<string>("coverHeadline");

	<section class="c-hero o-section">
		<div class="o-section__inner o-wrap">
			@if( !String.IsNullOrEmpty( headline ) ) {
				<h1 class="c-hero__headline u-center-content">@headline</h1>
			}
			<div class="o-wrap--center o-wrap--small">
				@if( Model.HasValue("coverCopy") ) {
					<div class="u-hide-small u-hide-medium u-hide-large u-center-content">
						<p>@Model.GetPropertyValue("coverCopy")</p>
					</div>
				}
				@Html.Action("RenderBasicSearchForm", "SearchForm")
			</div>
		</div>
		<div class="t-mouse"></div>
	</section>

}
