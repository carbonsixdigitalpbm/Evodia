@using Evodia.Data.Data
@using Examine;
@using Examine.SearchCriteria;
@using Examine.LuceneEngine.SearchCriteria
@inherits UmbracoViewPage<IPublishedContent>
@{
	Layout = "Master.cshtml";

    var jobs = JobsRepository.AllJobs(Umbraco);
}

<div class="o-section o-wrap o-wrap--large">
    <h2>Jobs repository</h2>
    <ul>
        @foreach (var job in jobs)
        {
            <li>@job.Name</li>
        }
    </ul>
</div>

<div class="o-section o-wrap o-wrap--large">
    <h2>Examine search</h2>
@{
    if (!string.IsNullOrEmpty(Request.QueryString["search"]))
    {

        //Fetching what eva searchterm some bloke is throwin' our way
        var q = Request.QueryString["search"].Trim();

        //Fetching our SearchProvider by giving it the name of our searchprovider
        var Searcher = Examine.ExamineManager.Instance.SearchProviderCollection["JobsSearchSearcher"];

        var searchCriteria = Searcher.CreateSearchCriteria(Examine.SearchCriteria.BooleanOperation.Or);
        var query = searchCriteria.Field("nodeName", q.Boost(3)).Or().Field("jobDescription", q.Fuzzy());


        //Searching and ordering the result by score, and we only want to get the results that has a minimum of 0.05(scale is up to 1.)
        var searchResults = Searcher.Search(query.Compile()).OrderByDescending(x => x.Score).TakeWhile(x => x.Score > 0.05f);

        //Printing the results
        <ul>
            @foreach (var item in searchResults)
            {
                
                <li>
                    @item.Id
                </li>
            }
        </ul>
    }
}
</div>

