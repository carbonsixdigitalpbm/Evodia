@using Evodia.Data.Data
@using Examine;
@using Examine.SearchCriteria;
@using Examine.LuceneEngine.SearchCriteria
@inherits UmbracoViewPage<IPublishedContent>
@{
	Layout = "Master.cshtml";

    var jobs = JobsRepository.AllJobs(Umbraco);
}

<div class="o-section o-wrap o-wrap--large">
    <h2>Jobs repository</h2>
    <ul>
        @foreach (var job in jobs)
        {
            <li>@job.Name</li>
        }
    </ul>
</div>

<div class="o-section o-wrap o-wrap--large">
    <h2>Examine search</h2>
@{
    if (!string.IsNullOrEmpty(Request.QueryString["search"]))
    {

        var q = Request.QueryString["search"].Trim();
        var searcher = ExamineManager.Instance.SearchProviderCollection["JobsSearchSearcher"];

        var searchCriteria = searcher.CreateSearchCriteria(BooleanOperation.Or);
        var query = searchCriteria.Field("nodeName", q.Boost(3)).Or().Field("jobDescription", q.Fuzzy());
        var searchResults = searcher.Search(query.Compile()).OrderByDescending(x => x.Score).TakeWhile(x => x.Score > 0.05f);

        <ul>
            @foreach (var item in searchResults)
            {
                var umbracoPage = Umbraco.TypedContent(item.Id);
                <li>
                    @umbracoPage.Name @item.Score
                </li>
            }
        </ul>
    }
}
</div>

<div class="o-section o-wrap o-wrap--large">
    <h2>Another Examine search</h2>
    @{
        var term = Request["search"];
        var criteria = ExamineManager.Instance.SearchProviderCollection["JobsSearchSearcher"].CreateSearchCriteria();
        IBooleanOperation filter = null;
        var fields = new string[] { "nodeName", "jobDescription" };

        foreach (var t in term.Split(' '))
        {
            if (filter == null)
            {
                filter = criteria.GroupedOr(fields, t);
            }
            else
            {
                filter = filter.And().GroupedOr(fields, t);
            }
        }

        if (filter == null)
        {
            filter = criteria.GroupedOr(fields, term);
        }
        else
        {
            filter = filter.And().GroupedOr(fields, term);
        }


        filter.Not().Field("umbracoNaviHide", "1");

        var results = ExamineManager.Instance
          .SearchProviderCollection["JobsSearchSearcher"]
          .Search(filter.Compile())
          .OrderByDescending(x => x.Score);
    }

    @if (results.Any())
    {
        <p>@results.Count() found for @term</p>
        foreach (var item in results)
        {
            var umbracoPage = Umbraco.TypedContent(item.Id);

            <p>@umbracoPage.Name @item.Score</p>
        }
    }
    else
    {
        <p>No results found for @term</p>
    }
</div>