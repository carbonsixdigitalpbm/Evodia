@using Umbraco.Web
@using Evodia.Core.Models
@inherits UmbracoViewPage<ContactConsultingForm>
@{
    var success = TempData["ContactConsultingFormValidationPasses"] != null;
    var error = TempData["ContactConsultingFormValidationFailed"] != null;
    var folderId = TempData["ContactConsultingFormFormFolderId"];
    var formLegend = ViewData["legend"] != null ? ViewData["legend"] as string : "";
}

@if (success)
{
    if (folderId != null)
    {
        var folder = Umbraco.TypedContent(folderId);
        var message = folder.GetPropertyValue<IHtmlString>("submissionMessage");

		<div class="c-alert c-alert--success c-alert--fixed o-wrap--medium">
            @message
        </div>
    }
}
else
{
    if (error)
    {
        @Html.ValidationSummary()
    }

    using (Html.BeginUmbracoForm("ProcessFormSubmission", "ContactConsultingForm", FormMethod.Post, new { id = "contact-form", @class = "o-form js-form" }))
    {
        @Html.AntiForgeryToken()
        <fieldset class="o-form__fieldset">
            @if (!string.IsNullOrWhiteSpace(formLegend))
            {
                <legend class="o-legend u-beta u-highlight-text u-space-bottom--small u-strong">@formLegend</legend>
            }
            <div class="o-form__field o-form__field--compact is-required">
                @Html.TextBoxFor(x => x.Name, new {required = "required", @class = "o-input"})
                @Html.LabelFor(x => x.Name, new {@class = "o-label"})
                @Html.ValidationMessageFor(x => x.Name)
            </div>
            <div class="o-form__field o-form__field--compact is-required">
                @Html.TextBoxFor(x => x.Email, new {required = "required", @class = "o-input"})
                @Html.LabelFor(x => x.Email, new {@class = "o-label"})
                @Html.ValidationMessageFor(x => x.Email)
            </div>
            <div class="o-form__field o-form__field--compact is-required">
                @Html.TextAreaFor(x => x.Message, new {required = (string) null, @class = "o-input", rows = 6})
                @Html.LabelFor(x => x.Message, new {@class = "o-label"})
                @Html.ValidationMessageFor(x => x.Message)
            </div>
            <div class="o-form__field o-form__field--submit u-content--right">
                <button type="submit" class="c-button c-button--primary">Send form</button>
            </div>
        </fieldset>
    }
}
