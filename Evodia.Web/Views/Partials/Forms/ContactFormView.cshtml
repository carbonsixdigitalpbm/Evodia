@using Umbraco.Web
@using Evodia.Core.Models
@inherits UmbracoViewPage<ContactForm>
@{
    var success = TempData["ValidationPasses"] != null;
    var error = TempData["ValidationFailed"] != null;
    var folderId = TempData["FormFolderId"];
}

@if (success)
{
    if (folderId != null)
    {
        var folder = Umbraco.TypedContent(folderId);
        var message = folder.GetPropertyValue<IHtmlString>("submissionMessage");

        @message
    }
}
else
{
    if (error)
    {
        @Html.ValidationSummary()
    }

    using (Html.BeginUmbracoForm("ProcessFormSubmission", "ContactForm", FormMethod.Post, new { id = "contact-form", @class = "o-form js-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="o-form__field o-form__field--compact">
            @Html.TextBoxFor(x => x.Name, new { required = "required", @class = "o-input" })
			@Html.LabelFor(x => x.Name, new { @class = "o-label" })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="o-form__field o-form__field--compact">
            @Html.TextBoxFor(x => x.Email, new { required = "required", @class = "o-input" })
			@Html.LabelFor(x => x.Email, new { @class = "o-label" })
            @Html.ValidationMessageFor(x => x.Email)
        </div>
        <div class="o-form__field o-form__field--compact">
			@Html.TextAreaFor(x => x.Message, new { required = (string)null, @class = "o-input", rows = 6 })
			@Html.LabelFor(x => x.Message, new { @class = "o-label" })
            @Html.ValidationMessageFor(x => x.Message)
        </div>
        <div class="o-form__field o-form__field--submit">
            <button type="submit" class="c-button c-button--primary">Send form</button>
        </div>
    }
}
