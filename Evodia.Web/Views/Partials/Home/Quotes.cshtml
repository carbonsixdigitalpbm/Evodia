@using Umbraco.Web
@inherits UmbracoViewPage<IPublishedContent>
@{
	var quotes = Model.GetPropertyValue<List<IPublishedContent>>("quotes");
    var hasQuotes = quotes.Any(x => x.HasValue("quoteMessage"));
    var isCarousel = hasQuotes && quotes.Count() > 1;
	var carouselClass = isCarousel ? "js-carousel" : "";
}
@if( hasQuotes ) {
	<section class="c-carousel o-section o-wrap o-wrap--medium">
		<div class="o-section__inner u-center-content @carouselClass" data-nav="true" data-loop="true" data-fade="true">
			@foreach( var item in quotes ) {
				@RenderQuote( item )
			}
		</div>
		<span class="t-line-vertical" aria-role="presentation"></span>
	</section>
}

@helper RenderQuote( IPublishedContent item ) {
	var quote = item.GetPropertyValue("quoteMessage");
    var source = item.GetPropertyValue<string>("source");
	var role = item.GetPropertyValue<string>("role");
    var renderQuote = quote != null && quote.ToString() != "";

    if (!renderQuote)
    {
        return;
    }

    <blockquote class="c-quote">
		<div class="c-quote__inner">
	        <div class="c-quote__copy">
	            @quote
	        </div>

	        <footer class="c-quote__src">@source - <span class="u-light">@role</span></footer>
		</div>
    </blockquote>
}
