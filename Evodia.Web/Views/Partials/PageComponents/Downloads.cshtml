@using Umbraco.Web
@using Evodia.Core.ExtensionMethods
@inherits UmbracoViewPage<IPublishedContent>
@{
	var wrapSize = ViewData["wrapSize"];

    var mediaIds = Model.GetPropertyValue<string>("files");
    var hasFiles = !string.IsNullOrEmpty(mediaIds);
    var hasTitle = Model.HasValue("headline");
}

@if (hasFiles) {
	<div class="o-wrap o-wrap--@wrapSize o-page-component">
	    @if (hasTitle) {
	        <h2>@(Model.GetPropertyValue<string>("headline"))</h2>
	    }
		@if( Model.HasValue("intro") ) {
			@Model.GetPropertyValue("intro")
		}

	    <ul class="c-link-list">
	        @foreach (var media in mediaIds.Split(',').Select(mediaId => Umbraco.TypedMedia(mediaId)))
	        {
	            @RenderFile(media)

	            foreach (var file in media.Descendants())
	            {
	                @RenderFile(file)
	            }
	        }
	    </ul>
	</div>
}

@helper RenderFile( IPublishedContent item ) {
    var url = item.Url;
    var fileName = item.Name;
    var fileSize = item.GetPropertyValue<int>("umbracoBytes");
    var altText = item.GetPropertyValue<string>("altText");

    <li class="c-link-list__item">
        <a href="@url" title="@altText" class="c-link-list__link u-clearfix" target="_blank">
            <i class="ico-file c-link-list__icon"></i>
            <span class="c-link-list__name">@fileName</span>
            <span class="c-link-list__meta">@fileSize.ToFileSize()</span>
        </a>
    </li>
}
